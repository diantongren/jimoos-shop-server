<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jimoos.dao.ProductTagMapper">
    <resultMap id="BaseResultMap" type="cn.jimoos.model.ProductTag">
        <!--@mbg.generated-->
        <!--@Table t_product_tag-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
        <result column="create_at" jdbcType="BIGINT" property="createAt"/>
        <result column="update_at" jdbcType="BIGINT" property="updateAt"/>
        <result column="deleted" jdbcType="BOOLEAN" property="deleted"/>
    </resultMap>
    <resultMap id="BaseResultDto" type="cn.jimoos.dto.ProductTagDto">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <id column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
        <result column="create_at" jdbcType="BIGINT" property="createAt"/>
        <result column="update_at" jdbcType="BIGINT" property="updateAt"/>
        <result column="deleted" jdbcType="BOOLEAN" property="deleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `name`, `type`, color, create_at, update_at, deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_product_tag
        where deleted = false
          AND id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from t_product_tag
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.jimoos.model.ProductTag"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_product_tag (`name`, `type`, color,
                                   create_at, update_at, deleted)
        values (#{name,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{color,jdbcType=VARCHAR},
                #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, #{deleted,jdbcType=BOOLEAN})
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.jimoos.model.ProductTag">
        <!--@mbg.generated-->
        update t_product_tag
        set `name`    = #{name,jdbcType=VARCHAR},
            `type`    = #{type,jdbcType=TINYINT},
            color     = #{color,jdbcType=VARCHAR},
            create_at = #{createAt,jdbcType=BIGINT},
            update_at = #{updateAt,jdbcType=BIGINT},
            deleted   = #{deleted,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_product_tag
                (`name`, `type`, color, create_at, update_at, deleted)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.name,jdbcType=VARCHAR}, #{item.type,jdbcType=TINYINT}, #{item.color,jdbcType=VARCHAR},
             #{item.createAt,jdbcType=BIGINT}, #{item.updateAt,jdbcType=BIGINT}, #{item.deleted,jdbcType=BOOLEAN})
        </foreach>
    </insert>

    <!--auto generated by MybatisCodeHelper on 2021-03-29-->
    <update id="updateDeletedById">
        update t_product_tag
        set deleted=#{updatedDeleted,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--auto generated by MybatisCodeHelper on 2021-03-29-->
    <select id="findByIdIn" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_product_tag
                where deleted = false
                  AND id in
        <foreach item="item" index="index" collection="idCollection"
                 open="(" separator="," close=")">
            #{item,jdbcType=BIGINT}
        </foreach>
    </select>
    <!--auto generated by MybatisCodeHelper on 2021-03-29-->
    <select id="findByProductIdIn" resultMap="BaseResultDto">
        select rpt.product_id,
               tpt.id,
               tpt.`name`,
               tpt.`type`,
               tpt.color,
               tpt.create_at,
               tpt.update_at,
               tpt.deleted
        from r_product_tag rpt
                     Join t_product_tag tpt
                ON rpt.tag_id = tpt.id
                where tpt.deleted = false
                  AND rpt.product_id in
        <foreach item="item" index="index" collection="idCollection"
                 open="(" separator="," close=")">
            #{item,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="queryTable" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_product_tag
                where deleted = false
        <if test="name != null">
            <bind name="bind" value="'%' + name + '%'"/>
            AND name like #{bind}
        </if>
        <if test="type != null">
            AND type = #{type}
        </if>
        order by create_at desc
        limit #{offset},#{limit}
    </select>

    <select id="queryTableCount" resultType="long">
        select count(id)
        from t_product_tag
                where deleted = false
        <if test="name != null">
            <bind name="bind" value="'%' + name + '%'"/>
            AND name like #{bind}
        </if>
        <if test="type != null">
            AND type = #{type}
        </if>
    </select>

    <select id="findByProductIdNotIn" resultMap="BaseResultDto">
    SELECT
        tpt.id,
        tpt.`name`,
        tpt.`type`,
        tpt.color,
        tpt.create_at,
        tpt.update_at,
        tpt.deleted
    FROM
	    t_product_tag tpt
    WHERE
        tpt.deleted = FALSE
        AND NOT EXISTS(SELECT product_id from r_product_tag rpt WHERE rpt.product_id = #{productId,jdbcType=BIGINT} AND rpt.tag_id = tpt.id)
    </select>
</mapper>
